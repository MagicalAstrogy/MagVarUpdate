function e(e){return _.isString(e)?e.replace(/^[\\"'` ]*(.*?)[\\"'` ]*$/,"$1"):e}function t(e,t){let a=1,s=!1,n="";for(let r=t;r<e.length;r++){const t=e[r],i=r>0?e[r-1]:"";if('"'!==t&&"'"!==t&&"`"!==t||"\\"===i||(s?t===n&&(s=!1):(s=!0,n=t)),!s)if("("===t)a++;else if(")"===t&&(a--,0===a))return r}return-1}function a(e){const t=[];let a="",s=!1,n="",r=0,i=0;for(let o=0;o<e.length;o++){const l=e[o];'"'!==l&&"'"!==l&&"`"!==l||0!==o&&"\\"===e[o-1]||(s?l===n&&(s=!1):(s=!0,n=l)),"["===l&&r++,"]"===l&&r--,"{"===l&&i++,"}"===l&&i--,","!==l||s||0!==r||0!==i?a+=l:(t.push(a.trim()),a="")}return a.trim()&&t.push(a.trim()),t}function s(e){const t=[];let a="",s=!1,n="";for(let r=0;r<e.length;r++){const i=e[r];'"'!==i&&"'"!==i||0!==r&&"\\"===e[r-1]?"."!==i||s?a+=i:(t.push(a),a=""):s?i===n?s=!1:a+=i:(s=!0,n=i)}return a&&t.push(a),t.join(".")}async function n(n,r){const i=!1;await eventEmit(o.VARIABLE_UPDATE_STARTED,r,i);const l=_.cloneDeep(r),c={},d=function(s){const n=[];let r=0;for(;r<s.length;){const i=s.indexOf("_.set(",r);if(-1===i)break;const o=i+6,l=t(s,o);if(-1===l){r=o+1;continue}let _=l+1;if(_<s.length&&";"===s[_]){for(_++;_<s.length&&" "===s[_];)_++;let t="";if(_+1<s.length&&"/"===s[_]&&"/"===s[_+1]){const e=s.indexOf("\n",_);-1!==e?(t=s.substring(_+2,e).trim(),_=e):(t=s.substring(_+2).trim(),_=s.length)}const c=s.substring(o,l),d=s.substring(i,_),u=a(c);u.length>=3?n.push({fullMatch:d,path:e(u[0]),oldValue:e(u[1]),newValue:e(u[2]),reason:t}):2===u.length&&n.push({fullMatch:d,path:e(u[0]),oldValue:e(u[1]),newValue:e(u[1]),reason:t}),r=_}else r=l+1}return n}(n);let u=!1;for(const t of d){let{path:a,newValue:n,reason:i}=t;if(a=s(a),_.has(r.stat_data,a)){const t=_.get(r.stat_data,a);if(_.isString(n)&&n.trim().startsWith("[")&&n.trim().endsWith("]"))try{const e=YAML.parse(n);Array.isArray(e)&&e.length>0&&(n=e[0])}catch(e){console.error(`Error parsing JSON array for '${a}': ${e.message}`)}if("number"==typeof t){const e=Number(n),s=t;_.set(r.stat_data,a,e);const d=i?`(${i})`:"",f=`${s}->${e} ${d}`;_.set(l.stat_data,a,f),_.set(c,a,f),u=!0,console.info(`Set '${a}' to '${e}' ${d}`),await eventEmit(o.SINGLE_VARIABLE_UPDATED,r.stat_data,a,s,e)}else if(Array.isArray(t)&&2===t.length){const s="number"==typeof t[0]?Number(n):e(n),d=_.cloneDeep(t[0]);t[0]=s,_.set(r.stat_data,a,t);const f=i?`(${i})`:"",g=`${JSON.stringify(d)}->${JSON.stringify(n)} ${f}`;_.set(l.stat_data,a,g),_.set(c,a,g),u=!0,console.info(`Set '${a}' to '${JSON.stringify(s)}' ${f}`),await eventEmit(o.SINGLE_VARIABLE_UPDATED,r.stat_data,a,d,s)}else{const s=e(n),d=_.cloneDeep(t);_.set(r.stat_data,a,s);const f=i?`(${i})`:"",g=JSON.stringify(s),E=`${JSON.stringify(d)}->${g} ${f}`;_.set(l.stat_data,a,E),_.set(c,a,E),u=!0,console.info(`Set '${a}' to '${g}' ${f}`),await eventEmit(o.SINGLE_VARIABLE_UPDATED,r.stat_data,a,d,s)}}else{const e=`undefined Path: ${a}->${n} (${i})`;console.error(e)}}return r.display_data=l.stat_data,r.delta_data=c,await eventEmit(o.VARIABLE_UPDATE_ENDED,r,i),u||i}async function r(e){const t=getChatMessages(e).at(-1);if(!t)return;const a=t.message,s=await async function(e){return structuredClone(SillyTavern.chat.slice(0,e+1).map((e=>_.get(e,["variables",e.swipe_id??0]))).findLast((e=>_.has(e,"stat_data"))))??getVariables()}(e);if(!_.has(s,"stat_data"))return void console.error(`cannot found stat_data for ${e}`);await n(a,s)&&await replaceVariables(s,{type:"chat"}),await replaceVariables(s,{type:"message",message_id:e}),"user"===t.role||a.includes("<StatusPlaceHolderImpl/>")||await setChatMessages([{message_id:e,message:a+"\n\n<StatusPlaceHolderImpl/>"}],{refresh:"affected"})}async function i(){var e=[];try{await getChatMessages(-2,{role:"assistant",include_swipes:!0})}catch(e){}if(e||(e=[]),e.length<=0){var t=await getChatMessages(0,{include_swipes:!0});if(!(t&&t.length>0))return void console.error("不存在任何一条消息，退出");e=t}var a=e[0],s=a.swipes_data[a.swipe_id],r=(await getLorebookSettings()).selected_global_lorebooks,i=await getCurrentCharPrimaryLorebook();null!==i&&r.push(i),void 0===s&&(s={display_data:{},initialized_lorebooks:[],stat_data:{},delta_data:{}}),_.has(s,"initialized_lorebooks")||(s.initialized_lorebooks=[]),s.stat_data||(s.stat_data={});var o=!1;for(const e of r)if(!s.initialized_lorebooks.includes(e)){s.initialized_lorebooks.push(e);var l=await getLorebookEntries(e);for(const e of l)if(e.comment?.toLowerCase().includes("[initvar]"))try{const t=YAML.parse(substitudeMacros(e.content));s.stat_data=_.merge(s.stat_data,t)}catch(e){return console.error(`Failed to parse JSON from lorebook entry: ${e}`),void toastr.error(e.message,"Failed to parse JSON from lorebook entry",{timeOut:5e3})}o=!0}if(!o)return;console.info("Init chat variables."),await insertOrAssignVariables(s);for(var c=0;c<a.swipes.length;c++){var d=_.cloneDeep(s);await n(substitudeMacros(a.swipes[c]),d),await setChatMessage({data:d},a.message_id,{refresh:"none",swipe_id:c})}const u={context_percentage:100,recursive:!0},f=await getLorebookSettings();_.isEqual(_.merge({},f,u),f)&&setLorebookSettings(u)}$((()=>{eventOn(tavern_events.GENERATION_STARTED,i),eventOn(tavern_events.MESSAGE_SENT,i),eventOn(tavern_events.MESSAGE_SENT,r),eventOn(tavern_events.MESSAGE_RECEIVED,r),_.set(window,"handleVariablesInMessage",r)})),$(window).on("unload",(()=>{eventRemoveListener(tavern_events.GENERATION_STARTED,i),eventRemoveListener(tavern_events.MESSAGE_SENT,i),eventRemoveListener(tavern_events.MESSAGE_SENT,r),eventRemoveListener(tavern_events.MESSAGE_RECEIVED,r)}));const o={SINGLE_VARIABLE_UPDATED:"mag_variable_updated",VARIABLE_UPDATE_ENDED:"mag_variable_update_ended",VARIABLE_UPDATE_STARTED:"mag_variable_update_started"};export{o as variable_events};
//# sourceMappingURL=bundle.js.map