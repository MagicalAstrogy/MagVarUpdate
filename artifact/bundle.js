import*as t from'https://testingcf.jsdelivr.net/npm/mathjs/+esm';import*as e from'https://testingcf.jsdelivr.net/npm/json5/+esm';import*as a from'https://testingcf.jsdelivr.net/npm/toml/+esm';var s={};function n(t){return'array'===t.type}function r(t){return'object'===t.type}s.d=(t,e)=>{for(var a in e)s.o(e,a)&&!s.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);const i='mag_variable_updated',o='mag_variable_update_ended',c='mag_variable_update_started',l='mag_invoke_mvu',d=t,m='$__META_EXTENSIBLE__$';function p(t,e,a=!1){if(Array.isArray(t)){let s,r,i=!1,o=a;e&&(n(e)?(i=!0===e.extensible,o=!0===e.recursiveExtensible||a,s=e.elementType,r=e.template):console.error(`Type mismatch: expected array schema but got ${e.type} at path`));const c=t.findIndex((t=>_.isObject(t)&&!_.isDate(t)&&'$arrayMeta'in t&&'$meta'in t&&!0===t.$arrayMeta));if(-1!==c){const e=t[c];void 0!==e.$meta.extensible&&(i=e.$meta.extensible),void 0!==e.$meta.template&&(r=e.$meta.template),t.splice(c,1),console.log('Array metadata element found and processed.')}const l=t.indexOf(m);l>-1&&(i=!0,t.splice(l,1),console.log('Extensible marker found and removed from an array.'));const d={type:'array',extensible:i||a,recursiveExtensible:o,elementType:t.length>0?p(t[0],s,o):{type:'any'}};return void 0!==r&&(d.template=r),d}if(_.isObject(t)&&!_.isDate(t)){const s=t;let n,i=!1,o=a;e&&(r(e)?(i=!0===e.extensible,o=!0===e.recursiveExtensible||a,n=e.properties):console.error(`Type mismatch: expected object schema but got ${e.type} at path`));const c={type:'object',properties:{},extensible:i||!0===s.$meta?.extensible||!0===s.$meta?.recursiveExtensible||a,recursiveExtensible:o||!0===s.$meta?.recursiveExtensible};void 0!==s.$meta?.template?c.template=s.$meta.template:e&&r(e)&&e.template&&(c.template=e.template);const l=s.$meta;s.$meta&&delete s.$meta;for(const e in t){const t=n?.[e],a=!1!==c.extensible&&c.recursiveExtensible,r=p(s[e],t,a);let i=!c.extensible;Array.isArray(l?.required)&&l.required.includes(e)&&(i=!0),!1===t?.required?i=!1:!0===t?.required&&(i=!0),c.properties[e]={...r,required:i}}return c}const s=typeof t;return'string'===s||'number'===s||'boolean'===s?{type:s}:{type:'any'}}function f(t,e){if(!e||!t)return t||null;const a=_.toPath(e);let s=t;for(const t of a){if(!s)return null;if(/^\d+$/.test(t)){if(!n(s))return null;s=s.elementType}else{if(!r(s)||!s.properties[t])return null;s=s.properties[t]}}return s}function u(t){console.log('Reconciling schema with current data state...');const e=p(_.cloneDeep(t.stat_data),t.schema);if(!r(e))return void console.error('Generated schema is not an object schema, which is unexpected for stat_data root');const a=e;void 0!==t.schema?.strictTemplate&&(a.strictTemplate=t.schema.strictTemplate),void 0!==t.schema?.concatTemplateArray&&(a.concatTemplateArray=t.schema.concatTemplateArray),_.has(t.stat_data,'$meta.strictTemplate')&&(a.strictTemplate=t.stat_data.$meta?.strictTemplate),_.has(t.stat_data,'$meta.concatTemplateArray')&&(a.concatTemplateArray=t.stat_data.$meta?.concatTemplateArray),t.schema=a,console.log('Schema reconciliation complete.')}function g(t){if(Array.isArray(t)){let e=t.length;for(;e--;)t[e]===m||_.isObject(t[e])&&!_.isDate(t[e])&&'$arrayMeta'in t[e]&&'$meta'in t[e]&&!0===t[e].$arrayMeta?t.splice(e,1):g(t[e])}else if(e=t,_.isObject(e)&&!_.isDate(e)){delete t.$meta;for(const e in t)g(t[e])}var e}function y(t){return _.isString(t)?t.replace(/^[\\"'` ]*(.*?)[\\"'` ]*$/,'$1'):t}function h(t,e,a=!1,s=!0){if(!e)return t;const n=_.isObject(t)&&!Array.isArray(t)&&!_.isDate(t),r=Array.isArray(t),i=Array.isArray(e);return n&&!i?_.merge({},e,t):r&&i?s?_.concat(t,e):_.merge([],e,t):(n||r)&&i!==r||!n&&!r&&_.isObject(e)&&!Array.isArray(e)?(console.error(`Template type mismatch: template is ${i?'array':'object'}, but value is ${r?'array':'object'}. Skipping template merge.`),t):n||r||!i||a?t:s?_.concat([t],e):_.merge([],e,[t])}function b(t){if('string'!=typeof t)return t;const e=t.trim();if('true'===e)return!0;if('false'===e)return!1;if('null'===e)return null;if('undefined'!==e){try{return JSON.parse(e)}catch(t){if(e.startsWith('{')&&e.endsWith('}')||e.startsWith('[')&&e.endsWith(']'))try{const t=new Function(`return ${e};`)();if(_.isObject(t)||Array.isArray(t))return t}catch(t){}}try{const t={Math,math:d},a=d.evaluate(e,t);if(d.isComplex(a)||d.isMatrix(a))return a.toString();if(void 0===a&&!/^[a-zA-Z_]+$/.test(e))return e;if(void 0!==a)return parseFloat(a.toPrecision(12))}catch(t){}try{return YAML.parse(e)}catch(t){}return y(t)}}function v(t,e){let a=1,s=!1,n='';for(let r=e;r<t.length;r++){const e=t[r],i=r>0?t[r-1]:'';if('"'!==e&&'\''!==e&&'`'!==e||'\\'===i||(s?e===n&&(s=!1):(s=!0,n=e)),!s)if('('===e)a++;else if(')'===e&&(a--,0===a))return r}return-1}function A(t){const e=[];let a='',s=!1,n='',r=0,i=0,o=0;for(let c=0;c<t.length;c++){const l=t[c];'"'!==l&&'\''!==l&&'`'!==l||0!==c&&'\\'===t[c-1]||(s?l===n&&(s=!1):(s=!0,n=l)),s||('('===l&&o++,')'===l&&o--,'['===l&&r++,']'===l&&r--,'{'===l&&i++,'}'===l&&i--),','!==l||s||0!==o||0!==r||0!==i?a+=l:(e.push(a.trim()),a='')}return a.trim()&&e.push(a.trim()),e}async function S(t){return structuredClone(_(SillyTavern.chat).slice(0,t+1).map((t=>_.get(t,['variables',t.swipe_id??0]))).findLast((t=>_.has(t,'stat_data'))))??getVariables()}function w(t){const e=[];let a='',s=!1,n='';for(let r=0;r<t.length;r++){const i=t[r];'"'!==i&&'\''!==i||0!==r&&'\\'===t[r-1]?'.'!==i||s?a+=i:(e.push(a),a=''):s?i===n?s=!1:a+=i:(s=!0,n=i)}return a&&e.push(a),e.join('.')}async function O(t,e){const a=!1;await eventEmit(c,e,a);const s=_.cloneDeep(e),l={},d=function(t){const e=[];let a=0;for(;a<t.length;){const s=t.substring(a).match(/_\.(set|assign|remove|add)\(/);if(!s||void 0===s.index)break;const n=s[1],r=a+s.index,i=r+s[0].length,o=v(t,i);if(-1===o){a=i;continue}let c=o+1;if(c>=t.length||';'!==t[c]){a=o+1;continue}c++;let l='';const d=t.substring(c).match(/^\s*\/\/(.*)/);d&&(l=d[1].trim(),c+=d[0].length);const m=t.substring(r,c),p=A(t.substring(i,o));let f=!1;('set'===n&&p.length>=2||'assign'===n&&p.length>=2||'insert'===n&&p.length>=2||'remove'===n&&p.length>=1||'add'===n&&2===p.length)&&(f=!0),f&&e.push({command:n,fullMatch:m,args:p,reason:l}),a=c}return e}(substitudeMacros(t));let m=!1;const p=e.schema,g=p?.strictTemplate??!1,S=p?.concatTemplateArray??!0;for(const t of d){const a=w(y(t.args[0])),o=t.reason?`(${t.reason})`:'';let c='';switch(t.command){case'set':{if(!_.has(e.stat_data,a)){console.warn(`Path '${a}' does not exist in stat_data, skipping set command ${o}`);continue}const s=_.get(e.stat_data,a);let n=b(t.args.length>=3?t.args[2]:t.args[1]);n instanceof Date&&(n=n.toISOString()),Array.isArray(s)&&2===s.length&&'string'==typeof s[1]&&!Array.isArray(s[0])?s[0]='number'==typeof s[0]&&null!==n?Number(n):n:'number'==typeof s&&null!==n?_.set(e.stat_data,a,Number(n)):_.set(e.stat_data,a,n);const r=_.get(e.stat_data,a);c=Array.isArray(s)&&2===s.length&&Array.isArray(r)?`${JSON.stringify(s[0])}->${JSON.stringify(r[0])} ${o}`:`${JSON.stringify(s)}->${JSON.stringify(r)} ${o}`,m=!0,console.info(`Set '${a}' to '${JSON.stringify(r)}' ${o}`),await eventEmit(i,e.stat_data,a,s,r);break}case'insert':case'assign':{const s=a,l=''===s?e.stat_data:_.get(e.stat_data,s),d=f(p,s);if(null!==l&&!Array.isArray(l)&&!_.isObject(l)){console.warn(`Cannot assign into path '${s}' because it holds a primitive value (${typeof l}). Operation skipped. ${o}`);continue}if(d){if('object'===d.type&&!1===d.extensible){if(2===t.args.length){console.warn(`SCHEMA VIOLATION: Cannot merge data into non-extensible object at path '${s}'. ${o}`);continue}if(t.args.length>=3){const e=String(b(t.args[1]));if(!_.has(d.properties,e)){console.warn(`SCHEMA VIOLATION: Cannot assign new key '${e}' into non-extensible object at path '${s}'. ${o}`);continue}}}else if('array'===d.type&&(!1===d.extensible||void 0===d.extensible)){console.warn(`SCHEMA VIOLATION: Cannot assign elements into non-extensible array at path '${s}'. ${o}`);continue}}else if(''!==s&&!_.get(e.stat_data,_.toPath(s).slice(0,-1).join('.'))){console.warn(`Cannot assign into non-existent path '${s}' without an extensible parent. ${o}`);continue}const u=_.cloneDeep(_.get(e.stat_data,a));let y=!1;if(2===t.args.length){let r=b(t.args[1]);r instanceof Date?r=r.toISOString():Array.isArray(r)&&(r=r.map((t=>t instanceof Date?t.toISOString():t)));let i=''===s?e.stat_data:_.get(e.stat_data,a);if(Array.isArray(i)||_.isObject(i)||(i=Array.isArray(r)?[]:{},_.set(e.stat_data,a,i)),Array.isArray(i)){r=h(r,d&&n(d)?d.template:void 0,g,S),i.push(r),c=`ASSIGNED ${JSON.stringify(r)} into array '${a}' ${o}`,y=!0}else if(_.isObject(i)){if(!_.isObject(r)||Array.isArray(r)){console.error(`Cannot merge ${Array.isArray(r)?'array':'non-object'} into object at '${a}'`);continue}_.merge(i,r),c=`MERGED object ${JSON.stringify(r)} into object '${a}' ${o}`,y=!0}}else if(t.args.length>=3){let i=b(t.args[2]);const l=b(t.args[1]);i instanceof Date?i=i.toISOString():Array.isArray(i)&&(i=i.map((t=>t instanceof Date?t.toISOString():t)));let m=''===s?e.stat_data:_.get(e.stat_data,a);const p=d&&(n(d)||r(d))?d.template:void 0;Array.isArray(m)&&'number'==typeof l?(i=h(i,p,g,S),m.splice(l,0,i),c=`ASSIGNED ${JSON.stringify(i)} into '${a}' at index ${l} ${o}`,y=!0):_.isObject(m)?(i=h(i,p,g,S),m[String(l)]=i,c=`ASSIGNED key '${l}' with value ${JSON.stringify(i)} into object '${a}' ${o}`,y=!0):(m={},_.set(e.stat_data,a,m),i=h(i,p,g,S),m[String(l)]=i,c=`CREATED object at '${a}' and ASSIGNED key '${l}' ${o}`,y=!0)}if(!y){console.error(`Invalid arguments for _.assign on path '${a}'`);continue}{const t=_.get(e.stat_data,a);m=!0,console.info(c),await eventEmit(i,e.stat_data,a,u,t)}break}case'remove':{if(!_.has(e.stat_data,a)){console.error(`undefined Path: ${a} in _.remove command`);continue}let s,n=a;if(t.args.length>1)s=b(t.args[1]),'string'==typeof s&&(s=y(s));else{const t=_.toPath(a),e=t.pop();e&&(s=/^\d+$/.test(e)?Number(e):e,n=t.join('.'))}if(void 0===s){console.error(`Could not determine target for deletion for command on path '${a}' ${o}`);continue}if(''!==n&&!_.has(e.stat_data,n)){console.warn(`Cannot remove from non-existent path '${n}'. ${o}`);continue}const r=f(p,n);if(r)if('array'===r.type){if(!0!==r.extensible){console.warn(`SCHEMA VIOLATION: Cannot remove element from non-extensible array at path '${n}'. ${o}`);continue}}else if('object'===r.type){const t=String(s);if(_.has(r.properties,t)&&!0===r.properties[t].required){console.warn(`SCHEMA VIOLATION: Cannot remove required key '${t}' from path '${n}'. ${o}`);continue}}const l=t.args.length>1?b(t.args[1]):void 0;let d=!1;if(void 0===l){const t=_.get(e.stat_data,a);_.unset(e.stat_data,a),c=`REMOVED path '${a}' ${o}`,d=!0,await eventEmit(i,e.stat_data,a,t,void 0)}else{const t=_.get(e.stat_data,a);if(!Array.isArray(t)&&!_.isObject(t)){console.warn(`Cannot remove from path '${a}' because it is not an array or object. Skipping command. ${o}`);continue}if(Array.isArray(t)){const s=_.cloneDeep(t);let n=-1;n='number'==typeof l?l:t.findIndex((t=>_.isEqual(t,l))),n>=0&&n<t.length&&(t.splice(n,1),d=!0,c=`REMOVED item from '${a}' ${o}`,await eventEmit(i,e.stat_data,a,s,t))}else if(_.isObject(t))if('number'==typeof l){const e=Object.keys(t),s=l;if(s>=0&&s<e.length){const n=e[s];_.unset(t,n),d=!0,c=`REMOVED ${s+1}th entry ('${n}') from object '${a}' ${o}`}}else{const e=String(l);_.has(t,e)&&(delete t[e],d=!0,c=`REMOVED key '${e}' from object '${a}' ${o}`)}}if(!d){console.warn(`Failed to execute remove on '${a}'`);continue}m=!0,console.info(c);break}case'add':{if(!_.has(e.stat_data,a)){console.warn(`Path '${a}' does not exist in stat_data, skipping add command ${o}`);continue}const s=_.cloneDeep(_.get(e.stat_data,a)),n=_.get(e.stat_data,a);let r=n;const l=Array.isArray(n)&&2===n.length&&'object'!=typeof n[0];l&&(r=n[0]);let d=null;if(r instanceof Date)d=r;else if('string'==typeof r){const t=new Date(r);!isNaN(t.getTime())&&isNaN(Number(r))&&(d=t)}if(2!==t.args.length){console.warn(`Invalid number of arguments for _.add on path '${a}' ${o}`);continue}{const p=b(t.args[1]);if(d){if('number'!=typeof p){console.warn(`Delta '${t.args[1]}' for Date operation is not a number, skipping add command ${o}`);continue}const r=new Date(d.getTime()+p),f=r.toISOString();l?(n[0]=f,_.set(e.stat_data,a,n)):_.set(e.stat_data,a,f);const u=_.get(e.stat_data,a);c=l?`${JSON.stringify(s[0])}->${JSON.stringify(u[0])} ${o}`:`${JSON.stringify(s)}->${JSON.stringify(u)} ${o}`,m=!0,console.info(`ADDED date '${a}' from '${d.toISOString()}' to '${r.toISOString()}' by delta '${p}'ms ${o}`),await eventEmit(i,e.stat_data,a,s,u)}else{if('number'!=typeof r){console.warn(`Path '${a}' value is not a date or number; skipping add command ${o}`);continue}{if('number'!=typeof p){console.warn(`Delta '${t.args[1]}' is not a number, skipping add command ${o}`);continue}let d=r+p;d=parseFloat(d.toPrecision(12)),l?(n[0]=d,_.set(e.stat_data,a,n)):_.set(e.stat_data,a,d);const f=_.get(e.stat_data,a);c=l?`${JSON.stringify(s[0])}->${JSON.stringify(f[0])} ${o}`:`${JSON.stringify(s)}->${JSON.stringify(f)} ${o}`,m=!0,console.info(`ADDED number '${a}' from '${r}' to '${d}' by delta '${p}' ${o}`),await eventEmit(i,e.stat_data,a,s,f)}}}break}}c&&(_.set(s.stat_data,a,c),_.set(l,a,c))}return m&&u(e),e.display_data=s.stat_data,e.delta_data=l,await eventEmit(o,e,a),m||a}async function E(t){const e=getChatMessages(t).at(-1);if(!e)return;const a=e.message,s=await S(t);if(!_.has(s,'stat_data'))return void console.error(`cannot found stat_data for ${t}`);if(await O(a,s)){const t=getVariables({type:'chat'});t.stat_data=s.stat_data,t.display_data=s.display_data,t.delta_data=s.delta_data,t.schema=s.schema,t.initialized_lorebooks=s.initialized_lorebooks,await replaceVariables(t,{type:'chat'})}await insertOrAssignVariables({stat_data:s.stat_data,display_data:s.display_data,delta_data:s.delta_data,schema:s.schema,initialized_lorebooks:s.initialized_lorebooks},{type:'message',message_id:t}),'user'===e.role||a.includes('<StatusPlaceHolderImpl/>')||await setChatMessages([{message_id:t,message:a+'\n\n<StatusPlaceHolderImpl/>'}],{refresh:'affected'})}async function j(t,e){if(void 0===e.old_variables)return;e.new_variables=_.cloneDeep(e.old_variables);const a=e.new_variables;await O(t,a)||delete e.new_variables}function T(t,e,a,s){_.forEach(e,((t,e)=>{const n=e;if(_.isArray(t)){if(2===t.length&&_.isString(t[1])){if(_.isArray(_.get(a,n))){const r=_.get(a,n);if(2===r.length)if(_.set(s,`${n}[1]`,t[1]),_.isObject(t[0])&&!_.isArray(t[0])){const a=_.get(s,`${e}[0]`);_.has(t[0],'description')&&_.isString(t[0].description)&&_.has(r[0],'description')&&_.set(s,`${n}[0].description`,t[0].description),T(`${n}[0]`,t[0],r[0],a)}else _.isArray(t[0])&&T(`${n}[0]`,t[0],r[0],s[0])}}else if(_.isArray(_.get(a,n))){const e=_.get(a,n);t.forEach(((a,r)=>{if(r<e.length&&_.isObject(a)){const i=_.get(s,`${n}[${r}]`);_.has(a,'description')&&_.isString(a.description)&&_.has(e[r],'description')&&_.set(i,'description',a.description),T(`${n}[${r}]`,t[r],e[r],i)}}))}}else if(_.isObject(t)){if(_.has(t,'description')&&_.isString(t.description)){const n=`${e}.description`;_.has(a,n)&&_.set(s,n,t.description)}_.has(a,e)&&_.isObject(a[e])&&T(n,t,a[e],s[e])}}))}const k=(t=>{var e={};return s.d(e,t),e})({parse:()=>e.parse});const x=(t=>{var e={};return s.d(e,t),e})({parse:()=>a.parse});async function N(){let t,e;try{const a=await async function(){let t=[];try{t=await getChatMessages(-2,{role:'assistant',include_swipes:!0})}catch(t){}if(!t||t.length<=0){const e=await getChatMessages(0,{include_swipes:!0});if(!(e&&e.length>0))throw new Error('不存在任何一条消息');t=e}const e=t[0],a=e.swipes_data[e.swipe_id];return{message:e,variables:a}}();t=a.message,e=a.variables??{display_data:{},initialized_lorebooks:{},stat_data:{},delta_data:{},schema:{type:'object',properties:{}}}}catch(t){return void console.error('不存在任何一条消息，退出')}if(void 0===e&&(e={display_data:{},initialized_lorebooks:{},stat_data:{},delta_data:{},schema:{type:'object',properties:{}}}),_.has(e,'initialized_lorebooks')||(e.initialized_lorebooks={}),Array.isArray(e.initialized_lorebooks)){console.warn('Old "initialized_lorebooks" array format detected. Migrating to the new object format.');const t=e.initialized_lorebooks,a={};for(const e of t)a[e]=[];e.initialized_lorebooks=a}e.stat_data||(e.stat_data={}),e.schema||(e.schema={extensible:!1,properties:{},type:'object'});const a=await I(e);if(a){}if(a||!e.schema||_.isEmpty(e.schema)){const t=p(_.cloneDeep(e.stat_data));r(t)?(_.has(e.stat_data,'$meta.strictTemplate')&&(t.strictTemplate=e.stat_data.$meta?.strictTemplate),_.has(e.stat_data,'$meta.concatTemplateArray')&&(t.concatTemplateArray=e.stat_data.$meta?.concatTemplateArray),e.schema=t):console.error('Generated schema is not an object schema, which is unexpected for stat_data root'),g(e.stat_data)}if(a){console.info('Init chat variables.'),await insertOrAssignVariables(e);for(let a=0;a<t.swipes.length;a++){const s=_.cloneDeep(e);await O(t.swipes[a],s),await setChatMessage({data:s},t.message_id,{refresh:'none',swipe_id:a})}await async function(){const t={scan_depth:2,context_percentage:100,budget_cap:0,min_activations:0,max_depth:0,max_recursion_steps:0,insertion_strategy:'character_first',include_names:!1,recursive:!0,case_sensitive:!1,match_whole_words:!1,use_group_scoring:!1,overflow_alert:!1},e=getLorebookSettings();_.isEqual(_.merge({},e,t),e)||setLorebookSettings(t)}()}}async function I(t,e){const a=e||await async function(){const t=[...(await getLorebookSettings()).selected_global_lorebooks],e=await getCurrentCharPrimaryLorebook();return null!==e&&t.push(e),t}();let s=!1;t.initialized_lorebooks&&!Array.isArray(t.initialized_lorebooks)||(t.initialized_lorebooks={});for(const e of a){if(_.has(t.initialized_lorebooks,e))continue;t.initialized_lorebooks[e]=[];const a=await getLorebookEntries(e);for(const e of a)if(e.comment?.toLowerCase().includes('[initvar]')){const a=substitudeMacros(e.content);let s=null,n=null;try{s=YAML.parse(a)}catch(t){try{s=k.parse(a)}catch(t){try{s=x.parse(a)}catch(t){n=new Error(`Failed to parse content as YAML/JSON, JSON5, or TOML: ${t}`)}}}if(n)throw console.error(`Failed to parse lorebook entry[${e.comment}]: ${n}`),toastr.error(n.message,'Failed to parse lorebook entry',{timeOut:5e3}),n;s&&(t.stat_data=_.merge(t.stat_data,s))}s=!0}return s}const D=['重新处理变量','重新读取初始变量'];function M(){!function(){const t=getScriptButtons(getScriptId()),e=t.map((t=>t.name));for(const a of D.filter((t=>!e.includes(t))))t.push({name:a,visible:!1});replaceScriptButtons(getScriptId(),t)}(),eventOnButton('重新处理变量',(async function(){const t=getLastMessageId();t<1||0!==SillyTavern.chat.length&&(await deleteVariable('stat_data',{type:'message',message_id:t}),await deleteVariable('delta_data',{type:'message',message_id:t}),await deleteVariable('display_data',{type:'message',message_id:t}),await deleteVariable('schema',{type:'message',message_id:t}),await E(getLastMessageId()))})),eventOnButton('重新读取初始变量',(async function(){const t={display_data:{},initialized_lorebooks:{},stat_data:{},delta_data:{},schema:{type:'object',properties:{}}};try{if(!await I(t))return console.error('没有找到 InitVar 数据'),void toastr.error('没有找到 InitVar 数据','',{timeOut:3e3})}catch(t){return void console.error('加载 InitVar 数据失败:',t)}const e=getLastMessageId();if(e<0)return console.error('没有找到消息'),void toastr.error('没有找到消息','',{timeOut:3e3});const a=await S(e);if(!_.has(a,'stat_data'))return console.error('最新消息中没有找到 stat_data'),void toastr.error('最新消息中没有 stat_data','',{timeOut:3e3});const s=structuredClone(t);s.stat_data=_.merge(s.stat_data,a.stat_data),T(0,t.stat_data,a.stat_data,s.stat_data),await u(s),g(s.stat_data),await replaceVariables(s,{type:'message',message_id:e}),await replaceVariables(s,{type:'chat'}),console.info('InitVar更新完成'),toastr.success('InitVar描述已更新','',{timeOut:3e3})}))}$((()=>{M(),eventOn(tavern_events.GENERATION_STARTED,N),eventOn(tavern_events.MESSAGE_SENT,N),eventOn(tavern_events.MESSAGE_SENT,E),eventOn(tavern_events.MESSAGE_RECEIVED,E),eventOn(l,j),_.set(window,'handleVariablesInMessage',E)})),$(window).on('unload',(()=>{eventRemoveListener(tavern_events.GENERATION_STARTED,N),eventRemoveListener(tavern_events.MESSAGE_SENT,N),eventRemoveListener(tavern_events.MESSAGE_SENT,E),eventRemoveListener(tavern_events.MESSAGE_RECEIVED,E),eventRemoveListener(l,j)}));
//# sourceMappingURL=bundle.js.map